<?php
function fetch_products_from_external_api() {
    $response = wp_remote_get('https://api.example.com/products');
    
    if (is_wp_error($response)) {
        return 'Error fetching products: ' . $response->get_error_message();
    }

    $body = wp_remote_retrieve_body($response);
    $products = json_decode($body, true); // Convert JSON to an associative array

    return $products;
}

function add_product_to_woocommerce($product_data) {
    // Create the product
    $new_product = new WC_Product_Simple(); // Assuming it's a simple product
    
    $new_product->set_name($product_data['name']);
    $new_product->set_regular_price($product_data['price']);
    $new_product->set_description($product_data['description']);
    $new_product->set_sku($product_data['sku']); // Set SKU
    
    // Add categories (optional)
    if (!empty($product_data['categories'])) {
        $new_product->set_category_ids($product_data['categories']);
    }

    // Add product image (optional)
    if (!empty($product_data['image'])) {
        $image_id = upload_image_from_url($product_data['image']);
        $new_product->set_image_id($image_id); // Set product image
    }

    // Save the product
    $new_product->save();

    return $new_product->get_id(); // Return the product ID
}

// Helper function to upload an image from a URL
function upload_image_from_url($image_url) {
    $tmp = download_url($image_url);

    if (is_wp_error($tmp)) {
        return ''; // Return empty if image couldn't be downloaded
    }

    $file = array(
        'name'     => basename($image_url),
        'tmp_name' => $tmp
    );

    // Use WordPress functions to handle the upload
    $attachment_id = media_handle_sideload($file, 0);

    if (is_wp_error($attachment_id)) {
        @unlink($tmp); // Clean up
        return '';
    }

    return $attachment_id; // Return the attachment ID of the uploaded image
}
function my_custom_cron_job() {
    $products = fetch_products_from_external_api();

    if (!empty($products)) {
        foreach ($products as $product_data) {
            add_product_to_woocommerce($product_data);
        }
    }
}

// Hook into WordPress Cron
if (!wp_next_scheduled('my_custom_product_sync')) {
    wp_schedule_event(time(), 'hourly', 'my_custom_product_sync');
}

add_action('my_custom_product_sync', 'my_custom_cron_job');


?>